Git: https://www.atlassian.com/git/glossary#commands

1. Configure git on local machine
    - git config --global user.name "your_username_on_github"
    - git config --global user.email "your_email@example.com"

2. Using git in your project
    - initialize an empty git repository. This is done once for every new project:
        - "git init"
    - stage your changes every time you want to track new changes to your work:
        - "git add ." or "git add -A"
    - commit your changes every time you stage your work(git add .), this saves your work to the local repository:
        - git commit -m "your commit message"
    - create a repository on github. this happens only once
    - connect the local repository to the remote repository. this also happens only once:
        - git remote add origin REMOTE-URL
    - push your changes:
        - for the first time in a new branch, "git push -u origin master"
        - you will get an authentication pop up, you can choose token or sign in with your browser
            - token: it has expiry date and you will have to create it every time it expires.
                - profile_pix > settings > developer settings > personal access token > generate new token
            - sign in with your browser: connects your vscode to your github account
        - consequently, you run "git push"

3. U: untracked / A: staged / M: modified

4. git status: tells us the state of our project whether it is being tracked, staged, commited or untracked

5. creating a branch and checking out into it:
    - create a branch
        - git branch branch_name
    - checkout into the branch
        - git checkout branch_name
    - create a branch and check into it
        - git checkout -b branch_name
    - pushing from a new branch for the first time
        - git push -u origin branch_name
    - consequent pushes
        - git push

6. merge branches and bring them upto date with each other
    - get into the branch you want to merge into. For example, I want to to merge a branch called - "new branch" into the "master" branch, I will have to checkout into the master branch and then run the command:
        - git merge new_branch
            N/B: please make sure to have added, committed and pushed before merging.
    - when a change is made on the remote repository, every contributor will have to pull in the changes. this can be seen as fetch + merge.
        - git fetch
        then
        - git merge
        or
        - git pull (fetch + merge)
8. git merge
9. pulling from a branch
10. clone:
    - git clone url
11. fork
12. .gitignore file
13. conflict: Advanced git
14. creating pull request: Advanced git



other notes:
- "code ." is used to open projects in vscode from the terminal
- "ctrl + `" is used to open integrated terminal in vscode.